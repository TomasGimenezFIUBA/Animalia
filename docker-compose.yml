services:
  citizen-command-service-db:
    image: postgres:16
    container_name: citizen-command-service-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: animalia
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - animalia-postgres-data:/var/lib/postgresql/data
    networks:
      - animalia-net

  kafka-animalia:
    image: bitnami/kafka:latest
    container_name: kafka-animalia
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_ENABLE_KRAFT=true
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-animalia:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:29092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-animalia:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka-animalia-data:/bitnami/kafka
    networks:
      - animalia-net

  redis-quarantine:
    image: redis:7
    container_name: redis-quarantine
    ports:
      - "6379:6379"
    networks:
      - animalia-net
    volumes:
      - redis-quarantine-data:/data
    command: ["redis-server", "--appendonly", "yes"]

  citizen-query-service-db:
    image: mongo:7.0
    container_name: citizen-query-service-db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: citizensdb
    volumes:
      - animalia-citizen-mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - animalia-net

  animalia-discovery-server:
    image: tomasgimenez/discovery-server:latest
    container_name: animalia-discovery-server
    ports:
      - "8761:8761"
    networks:
      - animalia-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  animalia-api-gateway:
    image: tomasgimenez/api-gateway:latest
    container_name: animalia-api-gateway
    depends_on:
      - animalia-discovery-server
    ports:
      - "8081:8080"
    networks:
      - animalia-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  citizen-query-service:
    image: tomasgimenez/citizen-query-service:latest
    container_name: citizen-query-service
#    ports:
#      - "8080"
    depends_on:
      - kafka-animalia
      - citizen-query-service-db
      - redis-quarantine
      - animalia-discovery-server
      - animalia-api-gateway
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - animalia-net

  citizen-command-service:
    image: tomasgimenez/citizen-command-service:latest
    container_name: citizen-command-service
#    ports:
#      - "8080"
    depends_on:
      - kafka-animalia
      - citizen-command-service-db
      - animalia-discovery-server
      - animalia-api-gateway
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - animalia-net

  prometheus:
    image: prom/prometheus:v2.37.1
    container_name: animalia-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - citizen-command-service
      - citizen-query-service
    networks:
      - animalia-net

  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: animalia-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    networks:
      - animalia-net

volumes:
  animalia-postgres-data:
  kafka-animalia-data:
  redis-quarantine-data:
  animalia-citizen-mongo_data:

networks:
  animalia-net:
    driver: bridge
